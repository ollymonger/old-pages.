{"version":3,"sources":["src/redux/clientReducer.ts","src/redux/store.ts","src/data/header/menuItemsInLanguage.ts","src/components/headers/MobileHeader.tsx","src/components/headers/WebHeader.tsx","src/clientTab.tsx","src/components/TextTyper.tsx","src/components/Slides/index.ts","src/components/Slides/screens/AboutMe.tsx","src/components/Slides/screens/LoremIps.tsx","src/components/apps/Home.tsx","App.tsx","desktop.png"],"names":["initialState","device","lang","width","window","innerWidth","height","innerHeight","githubRepos","clientSlice","createSlice","name","reducers","setClient","state","result","UAParser","getResult","type","setScreenSize","action","payload","addGithubRepos","getState","setLanguage","navigator","language","indexOf","substring","setSpecificLang","getLanguage","actions","store","configureStore","reducer","client","clientReducer","useAppSelector","useSelector","menuItemsInLanguages","menu","home","projects","contact","MobileHeader","React","useState","open","setOpen","closeMenu","useNavigate","menuItems","find","item","View","style","styles","header","navLeft","Text","headerTextColor","navRight","Menu","visible","onDismiss","anchor","Button","onPress","color","title","Item","replace","Divider","map","WebHeader","to","paddingRight","ClientTab","dispatch","useDispatch","_setScreenSize","handleWindowResize","useCallback","e","useEffect","addEventListener","fetch","then","res","json","data","repo","id","description","license","full_name","owner","login","avatar_url","openIssues","open_issues","stars","stargazers_count","url","html_url","console","log","removeEventListener","TextTyper","time","onComplete","enabled","typed","setTyped","done","setDone","showLine","setShowLine","interval","setInterval","length","clearInterval","position","SlideLookup","AboutMe","fontFamily","fontSize","paddingLeft","paddingTop","textAlign","Page2","Page3","marginLeft","Home","fadeAnim","useRef","Animated","Value","current","fadeIn","timing","toValue","duration","useNativeDriver","start","opacity","MobHome","WebHome","text","Math","floor","random","setState","heightAnimation","_opacity","backgroundColor","marginTop","justifyContent","alignItems","finished","page","setPage","overflow","onGestureEvent","localX","nativeEvent","translationX","localPage","borderTopLeftRadius","borderTopRightRadius","asString","Slide","require","App","useFonts","Inter_900Black","Inter_300Light","fakeLoad","setFakeLoad","app","path","element","loadedContainer","href","textDecoration","loadingContainer","size","fill","rotation","tintColor","onAnimationComplete","loadingText","round","StyleSheet","create","flex","WebkitTouchCallout","WebkitUserSelect","KhtmlUserSelect","MozUserSelect","msUserSelect","userSelect","maxHeight","flexDirection","bottom","alignSelf","padding","module","exports"],"mappings":"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","file":"static/js/app.965da939.chunk.js","sourcesContent":["import { RootState } from './store';\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { UAParser } from 'ua-parser-js';\r\nimport { Navigate, useNavigate } from 'react-router';\r\nimport { FC } from 'react';\r\nimport { GitReposData } from '../models/gitReposData';\r\n\r\nexport interface clientState {\r\n    device: string;\r\n    lang: string;\r\n    width: number;\r\n    height: number;\r\n    githubRepos: GitReposData[];\r\n}\r\n\r\nconst initialState: clientState = {\r\n    device: 'null',\r\n    lang: 'en',\r\n    width: window.innerWidth,\r\n    height: window.innerHeight,\r\n    githubRepos: []\r\n}\r\n\r\nexport const clientSlice = createSlice({\r\n    name: 'client',\r\n    initialState,\r\n    reducers: {\r\n        setClient: (state) => {\r\n            let parser = new UAParser();\r\n            let result = parser.getResult();\r\n            state.device = result.device.type ? result.device.type : 'web';\r\n        },\r\n        setScreenSize: (state, action: PayloadAction<{ width: number, height: number }>) => {\r\n            state.width = action.payload.width;\r\n            state.height = action.payload.height;\r\n        },\r\n        addGithubRepos: (state, action: PayloadAction<GitReposData>) => {\r\n            state.githubRepos = [...state.githubRepos, action.payload];\r\n        },\r\n        getState: (state) => {\r\n            return state;\r\n        },\r\n        setLanguage: (state) => {\r\n            if (window.navigator.language.indexOf('-') > 0) {\r\n                // set state to only be first two characters of window.navigator.language\r\n                state.lang = window.navigator.language.substring(0, 2);\r\n            }\r\n            else {\r\n                state.lang = window.navigator.language;\r\n            }\r\n        },\r\n        setSpecificLang: (state, action: PayloadAction<string>) => {\r\n            state.lang = action.payload;\r\n        },\r\n        getLanguage: (state) => {\r\n            state.lang;\r\n        }\r\n    }\r\n})\r\n\r\nexport const { setClient, setLanguage, setSpecificLang, getLanguage, setScreenSize, addGithubRepos } = clientSlice.actions;\r\nexport const getClient = (state: clientState) => state;\r\n\r\nexport default clientSlice.reducer;\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport clientReducer from './clientReducer';\r\n\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        client: clientReducer\r\n    }\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","export const menuItemsInLanguages = [{lang:\"en\", menu: \"MENU\", home: \"HOME\", projects: \"PROJECTS\", contact: \"CONTACT\"}, \r\n{lang:\"fr\", menu: \"MENU\", home: \"ACCUEIL\", projects: \"PROJETS\", contact: \"CONTACT\"}, \r\n{lang:\"de\", menu: \"SPEISEKARTE\", home: \"HEIMAT\", projects: \"PROJEKTE\", contact: \"KONTAKT\"},\r\n{lang:\"es\", menu: \"MENÚ\", home: \"HOGAR\", projects: \"PROYECTOS\", contact: \"CONTACTO\"}, \r\n{lang:\"it\", menu: \"MENÙ\", home: \"CASA\", projects: \"PROGETTI\", contact: \"CONTATTO\"}, \r\n{lang:\"ru\", menu: \"МЕНЮ\", home: \"ДОМ\", projects: \"ПРОЕКТЫ\", contact: \"КОНТАКТ\"},\r\n{lang:\"zh\", menu: \"菜单\", home: \"家\", projects: \"项目\", contact: \"联系\"}, \r\n{lang:\"ja\", menu: \"メニュー\", home: \"家\", projects: \"プロジェクト\", contact: \"連絡先\"}];","import React, { useEffect } from \"react\";\r\nimport { View, Text, Button, Linking } from \"react-native\";\r\nimport { Divider, Menu } from \"react-native-paper\";\r\nimport { useNavigate } from \"react-router\";\r\n\r\nimport { styles } from \"../../../App\";\r\nimport { menuItemsInLanguages } from \"../../data/header/menuItemsInLanguage\";\r\nimport { clientState, setClient, setLanguage } from \"../../redux/clientReducer\";\r\nimport { useAppDispatch, useAppSelector } from \"../../redux/store\";\r\n\r\nexport const MobileHeader = () => {\r\n    const [open, setOpen] = React.useState(false);\r\n    const client: clientState = useAppSelector(state => state.client);\r\n\r\n    const openMenu = () => setOpen(true);\r\n    const closeMenu = () => setOpen(false);\r\n\r\n    let navigator = useNavigate();\r\n\r\n    let menuItems = menuItemsInLanguages.find(item => item.lang === client.lang);\r\n\r\n    return (\r\n        <View style={styles.header}>\r\n            <View style={styles.navLeft}>\r\n                <Text style={styles.headerTextColor} >yllo.cc</Text>\r\n            </View>\r\n            <View style={styles.navRight}>\r\n                <Menu visible={open} onDismiss={closeMenu} anchor={<Button onPress={openMenu} color=\"#B084CC\" title={menuItems.menu} />}>\r\n                    <Menu.Item onPress={() => { navigator('/', { replace: true }); closeMenu(); }} title={menuItems.home}></Menu.Item>\r\n                    <Divider />\r\n                    <Menu.Item onPress={() => { navigator('/projects', { replace: true }); closeMenu(); }} title={menuItemsInLanguages.map(lang => {\r\n                        if(lang.lang === client.lang){ return lang.projects; }\r\n                    })} />\r\n                    <Divider />\r\n                    <Menu.Item onPress={() => { navigator('/contact', { replace: true }); closeMenu(); }} title={menuItems.contact} />\r\n                </Menu>\r\n            </View>\r\n        </View>\r\n    )\r\n}","import React, { useEffect } from \"react\";\r\nimport { View, Text, Button } from \"react-native\";\r\nimport { styles } from \"../../../App\";\r\nimport { Route, Link } from 'react-router-native';\r\nimport { useAppSelector } from \"../../redux/store\";\r\nimport { clientState } from \"../../redux/clientReducer\";\r\nimport { menuItemsInLanguages } from \"../../data/header/menuItemsInLanguage\";\r\n\r\nexport const WebHeader = () => {\r\n    const client: clientState = useAppSelector(state => state.client);\r\n    \r\n    // select menu item in current language\r\n    let menuItems = menuItemsInLanguages.find(item => item.lang === client.lang);\r\n\r\n    return (\r\n\r\n        <View style={styles.header} >\r\n            <View style={styles.navLeft}>\r\n                <Link to=\"/\"><Text style={styles.headerTextColor}>yllo.cc</Text></Link>\r\n            </View>\r\n            <View style={styles.navRight}>\r\n                    <View style={{ paddingRight: '5%' }}>\r\n                        <Link to=\"/\"><Text style={styles.headerTextColor}>{menuItems.home}</Text></Link>\r\n                    </View>        \r\n                    <View style={{ paddingRight:'5%' }}>\r\n                        <Link to=\"/projects\"><Text style={styles.headerTextColor}>{menuItems.projects}</Text></Link>\r\n                    </View>\r\n                    <View>\r\n                        <Link to=\"/contact\"><Text style={styles.headerTextColor}>{menuItems.contact}</Text></Link>\r\n                    </View>\r\n            </View>\r\n        </View >\r\n    )\r\n}","import React, { useCallback, useEffect } from \"react\";\r\nimport { View, Text, Button } from \"react-native\";\r\nimport { styles } from \"../App\";\r\nimport { addGithubRepos, setClient, setLanguage, setScreenSize } from \"./redux/clientReducer\";\r\nimport { useAppDispatch, useAppSelector } from \"./redux/store\";\r\nimport { MobileHeader } from \"./components/headers/MobileHeader\";\r\nimport { WebHeader } from \"./components/headers/WebHeader\";\r\nimport { GitReposData } from \"./models/gitReposData\";\r\n\r\n\r\nexport const ClientTab = () => {\r\n    let client = useAppSelector(state => state.client)\r\n    const dispatch = useAppDispatch();\r\n    const [screenSize, _setScreenSize] = React.useState({ width: 0, height: 0 });\r\n\r\n    const handleWindowResize = useCallback(e =>{\r\n        _setScreenSize({ width: window.innerWidth, height: window.innerHeight });\r\n        dispatch(setScreenSize({ width: window.innerWidth, height: window.innerHeight }));\r\n    },[]);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", handleWindowResize);\r\n        \r\n        dispatch(setClient());\r\n        dispatch(setLanguage());\r\n        // get git repos for user\r\n        fetch(\"https://api.github.com/users/ollymonger/repos\").then(res => res.json()).then(data => {\r\n            //foreach item in data\r\n            for(let item in data){\r\n                let repo: GitReposData = { \r\n                    id: data[item].id,\r\n                    name: data[item].name,\r\n                    description: data[item].description,\r\n                    license: data[item].license,\r\n                    full_name: data[item].full_name,\r\n                    owner: {\r\n                        login: data[item].owner.login,\r\n                        id: data[item].owner.id,\r\n                        avatar_url: data[item].owner.avatar_url\r\n                    },\r\n                    openIssues: data[item].open_issues,\r\n                    stars: data[item].stargazers_count,\r\n                    url: data[item].html_url\r\n                };\r\n                dispatch(addGithubRepos(repo));\r\n            }\r\n            console.log(client.githubRepos);\r\n        });\r\n        return () => {\r\n            window.removeEventListener(\"resize\", handleWindowResize);\r\n        }\r\n        \r\n    }, [handleWindowResize]);\r\n\r\n\r\n    if(client.device === \"mobile\"){\r\n        return <MobileHeader/>\r\n    } else if(client.height > 600 && client.width > 640){\r\n        return <WebHeader/>\r\n    } else {\r\n        return <MobileHeader/>\r\n    }\r\n}\r\n","import React, { CSSProperties, useEffect } from 'react';\r\nimport { StyleProp, View,Text, TextStyle } from 'react-native';\r\n\r\nexport const TextTyper: React.FC<{ title: string, time: number, style: StyleProp<TextStyle>, onComplete: (e:boolean) => void, enabled?:boolean }> = ({ title, time, style, onComplete, enabled }) => {\r\n    const [typed, setTyped] = React.useState('');\r\n    const [done, setDone] = React.useState(false);\r\n    const [showLine, setShowLine] = React.useState(false);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            if (typed.length < title.length) {\r\n                setTyped(typed + title[typed.length]);\r\n            } else {\r\n                onComplete(true);\r\n                setDone(true);\r\n                clearInterval(interval);\r\n            }\r\n        }, time);       \r\n\r\n        // Clear the interval when the component is unmounted\r\n        return () => clearInterval(interval);\r\n    }, [typed]);\r\n\r\n\r\n    useEffect(() => {\r\n        if(done && enabled){\r\n            const interval = setInterval(() => {\r\n                setShowLine(!showLine);\r\n            }, 500);\r\n            return () => clearInterval(interval);\r\n        }\r\n    }, [done, showLine]);\r\n\r\n    return (\r\n        <View>\r\n            <Text style={style}>{typed} <Text style={{position:'absolute', }}>{showLine ? '|' : ''}</Text></Text>\r\n        </View>\r\n    )\r\n};\r\n","import { Slide } from './types'\r\nimport { AboutMe } from './screens/AboutMe'\r\nimport { LoremIsp, LoremIspTwo } from './screens/LoremIps'\r\n\r\nexport const SlideLookup: Record<Slide, React.FC<{}>> ={\r\n    AboutMe: AboutMe,\r\n    Page2: LoremIsp,\r\n    Page3: LoremIspTwo,\r\n} \r\n","import React from \"react\";\r\nimport { Text } from \"react-native\";\r\n\r\n// Slides must have a title component, stretching across the slide.\r\n// Must also have room at the top of the tile detailing how to navigate the slide.\r\n\r\n\r\n// This slide is to is the first screen, contains a photo and text about my journey as a developer.\r\n// In addition to this, it could also contain some of my URLs on the internet. youtube, ect\r\nexport const AboutMe: React.FC<{}> = () => {\r\n    return(\r\n        <>\r\n            <Text style={{fontFamily:'Inter_300Light', color:'lightgray', fontSize:'0.75rem', paddingLeft:'5vw', paddingTop:'5vh', width:'50%', textAlign:'justify'}}>I am a self-employed, self-taught Software Engineer with 4/5 years experience of coding (as a hobby) and about 6/7 months with my current employment! I am always looking for new things to learn, whether that be Dev Ops or learning a complete new language. </Text>\r\n            <Text style={{fontFamily:'Inter_300Light', color:'lightgray', fontSize:'0.75rem', paddingLeft:'5vw', paddingTop:'2vh', width:'90%', textAlign:'justify'}}>During my coding adventure, I have been able to have access to suites like: Microsoft Azure and Amazon's AWS as my tasks had required me to use these platforms. In my free time however, I was able to apply and use the Google Cloud to host a variety of different projects on my \"own\" servers and manage them accordingly.</Text>\r\n        </>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { Text } from \"react-native\";\r\n\r\nexport const LoremIsp: React.FC<{}> = () => {\r\n    return(\r\n        <>\r\n            <Text style={{fontFamily:'Inter_300Light', color:'lightgray', fontSize:'0.75rem', paddingLeft:'5vw', paddingTop:'5vh', width:'90%', textAlign:'justify'}}>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. </Text>\r\n            <Text style={{fontFamily:'Inter_300Light', color:'lightgray', fontSize:'0.75rem', paddingLeft:'5vw', paddingTop:'2vh', width:'90%', textAlign:'justify'}}>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</Text>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport const LoremIspTwo: React.FC<{}> = () => {\r\n    return(\r\n        <>\r\n            <Text style={{fontFamily:'Inter_300Light', color:'lightgray', fontSize:'0.75rem', marginLeft:'45vw', paddingTop:'5vh', width:'45%', textAlign:'justify'}}>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. </Text>\r\n        </>\r\n    );\r\n}\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { View, Text, Animated } from \"react-native\";\r\nimport { clientState } from \"../../redux/clientReducer\";\r\nimport { useAppSelector } from \"../../redux/store\";\r\nimport { TextTyper } from \"../TextTyper\";\r\nimport { GestureEvent, PanGestureHandler, PanGestureHandlerEventPayload } from \"react-native-gesture-handler\";\r\nimport { SlideLookup } from \"../Slides/index\";\r\n\r\nexport const Home = () => {\r\n    const fadeAnim = useRef(new Animated.Value(0)).current;\r\n    const client: clientState = useAppSelector(state => state.client);\r\n    \r\n    useEffect(() => {\r\n        fadeIn();\r\n    });\r\n\r\n    const fadeIn = () => {\r\n        Animated.timing(fadeAnim, {\r\n        toValue: 1,\r\n        duration: 100,\r\n        useNativeDriver: false\r\n        }).start();\r\n    };\r\n\r\n    if (client.device == \"mobile\") return (\r\n        <Animated.View style={[{ opacity: fadeAnim }]}>\r\n            {MobHome(client)}\r\n        </Animated.View>\r\n    );\r\n    else if(client.height > 600 && client.width > 640) return (\r\n        <Animated.View style={[{ opacity: fadeAnim }]}>\r\n            {WebHome(client)}\r\n        </Animated.View>\r\n    );\r\n    else return (\r\n        <Animated.View style={[{ opacity: fadeAnim }]}>\r\n            {MobHome(client)}\r\n        </Animated.View>\r\n    );\r\n};\r\n\r\n\r\nlet text = [\"Passionate Developer\", \"Creative Thinker\", \"Problem Solver\", \"Team Player\", \"Motivated Individual\", \"Self-taught Developer\"];\r\nlet random = Math.floor(Math.random() * text.length);\r\nlet title = text[random];\r\n\r\nconst WebHome: React.FC<clientState> = (client) => {\r\n    const [state, setState] = useState(false);\r\n    const [page, setPage] = useState(0);\r\n    const heightAnimation = useRef(new Animated.Value(700)).current;\r\n    const _opacity = useRef(new Animated.Value(0)).current;\r\n\r\n    const animateHeader = () => {\r\n        Animated.timing(heightAnimation, {\r\n            toValue: 200,\r\n            duration: 300,\r\n            useNativeDriver: false\r\n        }).start((finished) => {\r\n\r\n        });\r\n    };\r\n    \r\n    const animateContent = () => {\r\n        Animated.timing(_opacity, { \r\n            toValue: 1,\r\n            duration: 200,\r\n            useNativeDriver: false\r\n        }).start();\r\n    }\r\n\r\n    const onComplete = (e: boolean) => {\r\n        setState(e);\r\n    };    \r\n    \r\n   \r\n\r\n    return(\r\n        <View style={{\r\n            backgroundColor: \"#34057B\",\r\n            height:'90VH',\r\n            marginTop:'1vh'         \r\n        }}>\r\n            <Animated.View style={{width:'100%', height:heightAnimation, justifyContent: \"center\", alignItems: \"center\", paddingTop:'1vh'}}>\r\n                <View style={{justifyContent:'flex-start', alignItems:'flex-start', width:'18vw'}}>  \r\n                    <Text style={{color:'white', fontFamily:'Inter_300Light'}}>Hi I'm Olly, a...</Text>\r\n                </View>\r\n                <TextTyper title={title} time={100} style={{ color: 'white', fontFamily: 'Inter_900Black', fontSize:'3rem'}} onComplete={onComplete} enabled />\r\n                {state ? <TextTyper title={\"Thanks for checking out my site.\"} time={100} style={{color:'white', fontFamily:'Inter_300Light'}} onComplete={() => { animateHeader(); animateContent(); }}/> : <></>}\r\n            </Animated.View>\r\n        </View>\r\n    );\r\n};\r\n\r\n\r\nconst MobHome: React.FC<clientState> = (client) => {\r\n    const [state, setState] = useState(false);\r\n    const [page, setPage] = useState(0);\r\n    const heightAnimation = useRef(new Animated.Value(475)).current;\r\n    const _opacity = useRef(new Animated.Value(0)).current;\r\n\r\n    const animateHeader = () => {\r\n        Animated.timing(heightAnimation, {\r\n            toValue: 130,\r\n            duration: 300,\r\n            useNativeDriver: false\r\n        }).start((finished) => {\r\n        });\r\n    };\r\n\r\n    const animateContent = () => {\r\n        Animated.timing(_opacity, { \r\n            toValue: 1,\r\n            duration: 200,\r\n            useNativeDriver: false\r\n        }).start();\r\n    }\r\n    \r\n    const onComplete = (e: boolean) => {\r\n        setState(e);\r\n    };\r\n\r\n    const handleSwipe = (e:GestureEvent<PanGestureHandlerEventPayload>) => {\r\n        let localX = e.nativeEvent.translationX;\r\n        let localPage = page;\r\n         if (e.nativeEvent.state === 5) {\r\n            if (localX > 0) {\r\n                localPage = page-1;\r\n                if(localPage < 0) localPage = 2;\r\n                setPage(localPage);\r\n                if (page < 0) setPage(2);\r\n            } else {\r\n                localPage = page+1;\r\n                if(localPage > 2) localPage = 0;\r\n                setPage(localPage);\r\n                if (page > 1) setPage(0);\r\n            }\r\n         }\r\n    }\r\n\r\n    const SlideToShow = () => {\r\n        let asString;\r\n        if(page == 0) asString = 'AboutMe';\r\n        if(page == 1) asString = 'Page2';\r\n        if(page == 2) asString = 'Page3';\r\n        const Slide = SlideLookup[asString];\r\n        return <Slide />;\r\n    }\r\n\r\n\r\n    return(\r\n            <View style={{\r\n                backgroundColor: \"#34057B\",\r\n                height:'86vh',\r\n                overflow:'hidden' \r\n            }}>\r\n                <Animated.View style={{width:'100%', height:heightAnimation, justifyContent: \"center\", alignItems: \"center\", paddingTop:'1vh'}}>\r\n                    <View style={{justifyContent: \"center\", alignItems: \"center\"}}>  \r\n                        <Text style={{color:'white', fontFamily:'Inter_300Light'}}>Hi I'm Olly, a...</Text>\r\n                    </View>\r\n                    <TextTyper title={title} time={100} style={{ color: 'white', fontFamily: 'Inter_900Black', fontSize:'1.95rem'}} onComplete={onComplete} enabled />\r\n                    {state ? <TextTyper title={\"Thanks for checking out my site.\"} time={100} style={{color:'white', fontFamily:'Inter_300Light'}} onComplete={() => { animateHeader(); animateContent(); }}/> : <></>}\r\n                </Animated.View>\r\n                    <PanGestureHandler onGestureEvent={handleSwipe}>\r\n                        <Animated.View style={{ width:'99vw', height:client.height <= 750 ? '68vh' : '73vh',backgroundColor:'#34056A', \r\n                            opacity:_opacity,                \r\n                            borderTopLeftRadius: 50 / 2, borderTopRightRadius: 50 / 2, marginLeft:'0.5vw'}}>\r\n                                <SlideToShow/>\r\n                        </Animated.View>\r\n                    </PanGestureHandler>\r\n            </View>   \r\n    );\r\n};\r\n","import { StatusBar } from 'expo-status-bar';\r\nimport React, { useEffect, useRef } from 'react';\r\nimport { ImageBackground, StyleSheet, Text, View, Image, ProgressBarAndroidBase, Animated, Linking } from 'react-native';\r\nimport { Provider } from 'react-redux';\r\nimport { ClientTab } from './src/clientTab';\r\nimport { store, useAppDispatch } from './src/redux/store';\r\nimport { Link, NativeRouter, Route, Routes } from 'react-router-native';\r\nimport { useFonts, Inter_900Black, Inter_300Light } from '@expo-google-fonts/inter';\r\nimport { ProgressBar, Provider as PaperProvider } from 'react-native-paper';\r\nimport { AnimatedCircularProgress } from 'react-native-circular-progress';\r\n\r\nimport { Home } from './src/components/apps/Home';\r\n\r\nexport const mobileimage = require('./desktop.png');\r\n\r\n\r\nexport default function App() {\r\n  let [fontsLoaded] = useFonts({\r\n    Inter_900Black, Inter_300Light\r\n  });\r\n\r\n  let [fakeLoad, setFakeLoad] = React.useState(false);\r\n\r\n  return (\r\n    <NativeRouter>\r\n      <Provider store={store}>\r\n        <PaperProvider>\r\n          <View style={styles.app}>\r\n            {fakeLoad ?     \r\n              <View style={{}}>\r\n                  <ClientTab />\r\n              </View> :\r\n              <></>\r\n            }\r\n            <View>\r\n              {fakeLoad ? (  \r\n                <View>\r\n                  <Routes>\r\n                    <Route path=\"/\" element={<Home />} />\r\n                  </Routes>\r\n                  <View style={styles.loadedContainer}>\r\n                    <Text style={{fontFamily:'Inter_300Light', color:'lightgray', fontSize:'0.75rem',}}>\r\n                      {'\\u00A9'} 2022 yllo.cc | \r\n                      <a href=\"https://github.com/ollymonger/ollymonger.github.io/\" style={{color:'lightgray', textDecoration:'none'}}> Source</a> | \r\n                      Built using Expo and React-Native\r\n                    </Text>\r\n                  </View>\r\n                </View>\r\n                ) : (\r\n                <View style={styles.loadingContainer}>\r\n                  <AnimatedCircularProgress\r\n                    size={200}\r\n                    width={10}\r\n                    fill={100}\r\n                    rotation={0}\r\n                    duration={700}\r\n                    tintColor=\"#B084CC\"\r\n                    backgroundColor=\"purple\"\r\n                    onAnimationComplete={() => setFakeLoad(true)}\r\n                  >\r\n                    {\r\n                      (fill) => (                        \r\n                        <Text style={styles.loadingText}>{\r\n                          fill >= 95 ? 'LOADED'  : Math.round(fill) + '%'\r\n                        }</Text>\r\n                      )\r\n                    }\r\n                  </AnimatedCircularProgress>\r\n                </View>\r\n                )}\r\n            </View>\r\n\r\n          </View>\r\n        </PaperProvider>\r\n      </Provider>\r\n    </NativeRouter>\r\n  );\r\n}\r\n\r\nexport const styles = StyleSheet.create({\r\n  app: {\r\n    flex: 1,\r\n    backgroundColor: '#340580',\r\n    color: '#fff',\r\n    // disable highlighting\r\n    WebkitTouchCallout: 'none',\r\n    WebkitUserSelect: 'none',\r\n    KhtmlUserSelect: 'none',\r\n    MozUserSelect: 'none',\r\n    msUserSelect: 'none',\r\n    userSelect: 'none',\r\n    overflow:'hidden',\r\n    height:'100%',\r\n    width:'100%'\r\n  },\r\n  header: {\r\n    flex: 1,\r\n    maxHeight: '5%',\r\n    paddingLeft: '5%',\r\n    paddingTop: '2vh',\r\n    paddingRight: '5%',\r\n  },\r\n  headerTextColor: {\r\n    color: '#F7F7FF',\r\n    fontFamily: 'Inter_900Black'\r\n  },\r\n  navLeft: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'flex-start',\r\n    color: '#F7F7FF'\r\n  },\r\n  navRight: {\r\n    bottom: '20px',\r\n    flexDirection: 'row',\r\n    justifyContent: 'flex-end',\r\n    color: '#F7F7FF'\r\n  },\r\n  loadingContainer:{\r\n    flex: 2,\r\n    paddingLeft: '23vw',\r\n    paddingTop: '25vh',\r\n    paddingRight: '23vw',\r\n    alignSelf: 'center',\r\n  },\r\n  loadingText:{\r\n    fontFamily: 'Inter_900Black',\r\n    fontSize: '2rem',\r\n    color: '#B084CC'\r\n  },\r\n  loadedContainer: {\r\n    color:'lightgray',\r\n    backgroundColor:'#340580',\r\n    width:'100%',\r\n    justifyContent:'center', alignItems:'center',\r\n    height:'6.5vh',\r\n    padding:'0.5vh'\r\n  }\r\n});\r\n","module.exports = __webpack_public_path__ + \"static/media/desktop.c8a87ae7.png\";"],"sourceRoot":""}