{"version":3,"sources":["src/redux/clientReducer.ts","src/redux/store.ts","src/data/header/menuItemsInLanguage.ts","src/components/headers/MobileHeader.tsx","src/components/headers/WebHeader.tsx","src/clientTab.tsx","src/components/TextTyper.tsx","src/components/apps/Home.tsx","App.tsx","desktop.png"],"names":["initialState","device","lang","width","window","innerWidth","height","innerHeight","githubRepos","clientSlice","createSlice","name","reducers","setClient","state","result","UAParser","getResult","type","setScreenSize","action","payload","addGithubRepos","getState","setLanguage","navigator","language","indexOf","substring","setSpecificLang","getLanguage","actions","store","configureStore","reducer","client","clientReducer","useAppSelector","useSelector","menuItemsInLanguages","menu","home","projects","contact","MobileHeader","React","useState","open","setOpen","closeMenu","useNavigate","menuItems","find","item","View","style","styles","header","navLeft","Text","headerTextColor","navRight","Menu","visible","onDismiss","anchor","Button","onPress","color","title","Item","replace","Divider","map","WebHeader","to","paddingRight","ClientTab","dispatch","useDispatch","_setScreenSize","handleWindowResize","useCallback","e","useEffect","addEventListener","fetch","then","res","json","data","repo","id","description","license","full_name","owner","login","avatar_url","openIssues","open_issues","stars","stargazers_count","url","html_url","console","log","removeEventListener","TextTyper","time","onComplete","enabled","typed","setTyped","done","setDone","showLine","setShowLine","interval","setInterval","length","clearInterval","position","Home","fadeAnim","useRef","Animated","Value","current","fadeIn","timing","toValue","duration","useNativeDriver","start","opacity","MobHome","WebHome","text","Math","floor","random","setState","heightAnimation","_opacity","backgroundColor","marginTop","justifyContent","alignItems","paddingTop","fontFamily","fontSize","finished","overflow","borderTopLeftRadius","borderTopRightRadius","marginLeft","require","App","useFonts","Inter_900Black","Inter_300Light","fakeLoad","setFakeLoad","app","path","element","loadedContainer","href","textDecoration","loadingContainer","size","fill","rotation","tintColor","onAnimationComplete","loadingText","round","StyleSheet","create","flex","WebkitTouchCallout","WebkitUserSelect","KhtmlUserSelect","MozUserSelect","msUserSelect","userSelect","maxHeight","paddingLeft","flexDirection","bottom","alignSelf","padding","module","exports"],"mappings":"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","file":"static/js/app.76686f9a.chunk.js","sourcesContent":["import { RootState } from './store';\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { UAParser } from 'ua-parser-js';\r\nimport { Navigate, useNavigate } from 'react-router';\r\nimport { FC } from 'react';\r\nimport { GitReposData } from '../models/gitReposData';\r\n\r\nexport interface clientState {\r\n    device: string;\r\n    lang: string;\r\n    width: number;\r\n    height: number;\r\n    githubRepos: GitReposData[];\r\n}\r\n\r\nconst initialState: clientState = {\r\n    device: 'null',\r\n    lang: 'en',\r\n    width: window.innerWidth,\r\n    height: window.innerHeight,\r\n    githubRepos: []\r\n}\r\n\r\nexport const clientSlice = createSlice({\r\n    name: 'client',\r\n    initialState,\r\n    reducers: {\r\n        setClient: (state) => {\r\n            let parser = new UAParser();\r\n            let result = parser.getResult();\r\n            state.device = result.device.type ? result.device.type : 'web';\r\n        },\r\n        setScreenSize: (state, action: PayloadAction<{ width: number, height: number }>) => {\r\n            state.width = action.payload.width;\r\n            state.height = action.payload.height;\r\n        },\r\n        addGithubRepos: (state, action: PayloadAction<GitReposData>) => {\r\n            state.githubRepos = [...state.githubRepos, action.payload];\r\n        },\r\n        getState: (state) => {\r\n            return state;\r\n        },\r\n        setLanguage: (state) => {\r\n            if (window.navigator.language.indexOf('-') > 0) {\r\n                // set state to only be first two characters of window.navigator.language\r\n                state.lang = window.navigator.language.substring(0, 2);\r\n            }\r\n            else {\r\n                state.lang = window.navigator.language;\r\n            }\r\n        },\r\n        setSpecificLang: (state, action: PayloadAction<string>) => {\r\n            state.lang = action.payload;\r\n        },\r\n        getLanguage: (state) => {\r\n            state.lang;\r\n        }\r\n    }\r\n})\r\n\r\nexport const { setClient, setLanguage, setSpecificLang, getLanguage, setScreenSize, addGithubRepos } = clientSlice.actions;\r\nexport const getClient = (state: clientState) => state;\r\n\r\nexport default clientSlice.reducer;\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport clientReducer from './clientReducer';\r\n\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        client: clientReducer\r\n    }\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","export const menuItemsInLanguages = [{lang:\"en\", menu: \"MENU\", home: \"HOME\", projects: \"PROJECTS\", contact: \"CONTACT\"}, \r\n{lang:\"fr\", menu: \"MENU\", home: \"ACCUEIL\", projects: \"PROJETS\", contact: \"CONTACT\"}, \r\n{lang:\"de\", menu: \"SPEISEKARTE\", home: \"HEIMAT\", projects: \"PROJEKTE\", contact: \"KONTAKT\"},\r\n{lang:\"es\", menu: \"MENÚ\", home: \"HOGAR\", projects: \"PROYECTOS\", contact: \"CONTACTO\"}, \r\n{lang:\"it\", menu: \"MENÙ\", home: \"CASA\", projects: \"PROGETTI\", contact: \"CONTATTO\"}, \r\n{lang:\"ru\", menu: \"МЕНЮ\", home: \"ДОМ\", projects: \"ПРОЕКТЫ\", contact: \"КОНТАКТ\"},\r\n{lang:\"zh\", menu: \"菜单\", home: \"家\", projects: \"项目\", contact: \"联系\"}, \r\n{lang:\"ja\", menu: \"メニュー\", home: \"家\", projects: \"プロジェクト\", contact: \"連絡先\"}];","import React, { useEffect } from \"react\";\r\nimport { View, Text, Button, Linking } from \"react-native\";\r\nimport { Divider, Menu } from \"react-native-paper\";\r\nimport { useNavigate } from \"react-router\";\r\n\r\nimport { styles } from \"../../../App\";\r\nimport { menuItemsInLanguages } from \"../../data/header/menuItemsInLanguage\";\r\nimport { clientState, setClient, setLanguage } from \"../../redux/clientReducer\";\r\nimport { useAppDispatch, useAppSelector } from \"../../redux/store\";\r\n\r\nexport const MobileHeader = () => {\r\n    const [open, setOpen] = React.useState(false);\r\n    const client: clientState = useAppSelector(state => state.client);\r\n\r\n    const openMenu = () => setOpen(true);\r\n    const closeMenu = () => setOpen(false);\r\n\r\n    let navigator = useNavigate();\r\n\r\n    let menuItems = menuItemsInLanguages.find(item => item.lang === client.lang);\r\n\r\n    return (\r\n        <View style={styles.header}>\r\n            <View style={styles.navLeft}>\r\n                <Text style={styles.headerTextColor} >yllo.cc</Text>\r\n            </View>\r\n            <View style={styles.navRight}>\r\n                <Menu visible={open} onDismiss={closeMenu} anchor={<Button onPress={openMenu} color=\"#B084CC\" title={menuItems.menu} />}>\r\n                    <Menu.Item onPress={() => { navigator('/', { replace: true }); closeMenu(); }} title={menuItems.home}></Menu.Item>\r\n                    <Divider />\r\n                    <Menu.Item onPress={() => { navigator('/projects', { replace: true }); closeMenu(); }} title={menuItemsInLanguages.map(lang => {\r\n                        if(lang.lang === client.lang){ return lang.projects; }\r\n                    })} />\r\n                    <Divider />\r\n                    <Menu.Item onPress={() => { navigator('/contact', { replace: true }); closeMenu(); }} title={menuItems.contact} />\r\n                </Menu>\r\n            </View>\r\n        </View>\r\n    )\r\n}","import React, { useEffect } from \"react\";\r\nimport { View, Text, Button } from \"react-native\";\r\nimport { styles } from \"../../../App\";\r\nimport { Route, Link } from 'react-router-native';\r\nimport { useAppSelector } from \"../../redux/store\";\r\nimport { clientState } from \"../../redux/clientReducer\";\r\nimport { menuItemsInLanguages } from \"../../data/header/menuItemsInLanguage\";\r\n\r\nexport const WebHeader = () => {\r\n    const client: clientState = useAppSelector(state => state.client);\r\n    \r\n    // select menu item in current language\r\n    let menuItems = menuItemsInLanguages.find(item => item.lang === client.lang);\r\n\r\n    return (\r\n\r\n        <View style={styles.header} >\r\n            <View style={styles.navLeft}>\r\n                <Link to=\"/\"><Text style={styles.headerTextColor}>yllo.cc</Text></Link>\r\n            </View>\r\n            <View style={styles.navRight}>\r\n                    <View style={{ paddingRight: '5%' }}>\r\n                        <Link to=\"/\"><Text style={styles.headerTextColor}>{menuItems.home}</Text></Link>\r\n                    </View>        \r\n                    <View style={{ paddingRight:'5%' }}>\r\n                        <Link to=\"/projects\"><Text style={styles.headerTextColor}>{menuItems.projects}</Text></Link>\r\n                    </View>\r\n                    <View>\r\n                        <Link to=\"/contact\"><Text style={styles.headerTextColor}>{menuItems.contact}</Text></Link>\r\n                    </View>\r\n            </View>\r\n        </View >\r\n    )\r\n}","import React, { useCallback, useEffect } from \"react\";\r\nimport { View, Text, Button } from \"react-native\";\r\nimport { styles } from \"../App\";\r\nimport { addGithubRepos, setClient, setLanguage, setScreenSize } from \"./redux/clientReducer\";\r\nimport { useAppDispatch, useAppSelector } from \"./redux/store\";\r\nimport { MobileHeader } from \"./components/headers/MobileHeader\";\r\nimport { WebHeader } from \"./components/headers/WebHeader\";\r\nimport { GitReposData } from \"./models/gitReposData\";\r\n\r\n\r\nexport const ClientTab = () => {\r\n    let client = useAppSelector(state => state.client)\r\n    const dispatch = useAppDispatch();\r\n    const [screenSize, _setScreenSize] = React.useState({ width: 0, height: 0 });\r\n\r\n    const handleWindowResize = useCallback(e =>{\r\n        _setScreenSize({ width: window.innerWidth, height: window.innerHeight });\r\n        dispatch(setScreenSize({ width: window.innerWidth, height: window.innerHeight }));\r\n    },[]);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", handleWindowResize);\r\n        \r\n        dispatch(setClient());\r\n        dispatch(setLanguage());\r\n        // get git repos for user\r\n        fetch(\"https://api.github.com/users/ollymonger/repos\").then(res => res.json()).then(data => {\r\n            //foreach item in data\r\n            for(let item in data){\r\n                let repo: GitReposData = { \r\n                    id: data[item].id,\r\n                    name: data[item].name,\r\n                    description: data[item].description,\r\n                    license: data[item].license,\r\n                    full_name: data[item].full_name,\r\n                    owner: {\r\n                        login: data[item].owner.login,\r\n                        id: data[item].owner.id,\r\n                        avatar_url: data[item].owner.avatar_url\r\n                    },\r\n                    openIssues: data[item].open_issues,\r\n                    stars: data[item].stargazers_count,\r\n                    url: data[item].html_url\r\n                };\r\n                dispatch(addGithubRepos(repo));\r\n            }\r\n            console.log(client.githubRepos);\r\n        });\r\n        return () => {\r\n            window.removeEventListener(\"resize\", handleWindowResize);\r\n        }\r\n        \r\n    }, [handleWindowResize]);\r\n\r\n\r\n    if(client.device === \"mobile\"){\r\n        return <MobileHeader/>\r\n    } else if(client.height > 600 && client.width > 640){\r\n        return <WebHeader/>\r\n    } else {\r\n        return <MobileHeader/>\r\n    }\r\n}\r\n","import React, { CSSProperties, useEffect } from 'react';\r\nimport { StyleProp, View,Text, TextStyle } from 'react-native';\r\n\r\nexport const TextTyper: React.FC<{ title: string, time: number, style: StyleProp<TextStyle>, onComplete: (e:boolean) => void, enabled?:boolean }> = ({ title, time, style, onComplete, enabled }) => {\r\n    const [typed, setTyped] = React.useState('');\r\n    const [done, setDone] = React.useState(false);\r\n    const [showLine, setShowLine] = React.useState(false);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            if (typed.length < title.length) {\r\n                setTyped(typed + title[typed.length]);\r\n            } else {\r\n                onComplete(true);\r\n                setDone(true);\r\n                clearInterval(interval);\r\n            }\r\n        }, time);       \r\n\r\n        // Clear the interval when the component is unmounted\r\n        return () => clearInterval(interval);\r\n    }, [typed]);\r\n\r\n\r\n    useEffect(() => {\r\n        if(done && enabled){\r\n            const interval = setInterval(() => {\r\n                setShowLine(!showLine);\r\n            }, 500);\r\n            return () => clearInterval(interval);\r\n        }\r\n    }, [done, showLine]);\r\n\r\n    return (\r\n        <View>\r\n            <Text style={style}>{typed} <Text style={{position:'absolute', }}>{showLine ? '|' : ''}</Text></Text>\r\n        </View>\r\n    )\r\n};\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { View, Text, Animated } from \"react-native\";\r\nimport { clientState } from \"../../redux/clientReducer\";\r\nimport { useAppSelector } from \"../../redux/store\";\r\nimport { TextTyper } from \"../TextTyper\";\r\n\r\nexport const Home = () => {\r\n    const fadeAnim = useRef(new Animated.Value(0)).current;\r\n    const client: clientState = useAppSelector(state => state.client);\r\n    \r\n    useEffect(() => {\r\n        fadeIn();\r\n    });\r\n\r\n    const fadeIn = () => {\r\n        Animated.timing(fadeAnim, {\r\n        toValue: 1,\r\n        duration: 100,\r\n        useNativeDriver: false\r\n        }).start();\r\n    };\r\n\r\n    if (client.device == \"mobile\") return (\r\n        <Animated.View style={[{ opacity: fadeAnim }]}>\r\n            {MobHome(client)}\r\n        </Animated.View>\r\n    );\r\n    else if(client.height > 600 && client.width > 640) return (\r\n        <Animated.View style={[{ opacity: fadeAnim }]}>\r\n            {WebHome(client)}\r\n        </Animated.View>\r\n    );\r\n    else return (\r\n        <Animated.View style={[{ opacity: fadeAnim }]}>\r\n            {MobHome(client)}\r\n        </Animated.View>\r\n    );\r\n};\r\n\r\n\r\nlet text = [\"Passionate Developer\", \"Creative Thinker\", \"Problem Solver\", \"Team Player\", \"Motivated Individual\", \"Self-taught Developer\"];\r\nlet random = Math.floor(Math.random() * text.length);\r\nlet title = text[random];\r\n\r\nconst WebHome: React.FC<clientState> = (client) => {\r\n    const [state, setState] = useState(false);\r\n    const heightAnimation = useRef(new Animated.Value(700)).current;\r\n    const _opacity = useRef(new Animated.Value(0)).current;\r\n\r\n    const animateHeader = () => {\r\n        Animated.timing(heightAnimation, {\r\n            toValue: 200,\r\n            duration: 300,\r\n            useNativeDriver: false\r\n        }).start((finished) => {\r\n\r\n        });\r\n    };\r\n    \r\n    const animateContent = () => {\r\n        Animated.timing(_opacity, { \r\n            toValue: 1,\r\n            duration: 200,\r\n            useNativeDriver: false\r\n        }).start();\r\n    }\r\n\r\n    const onComplete = (e: boolean) => {\r\n        setState(e);\r\n    };\r\n\r\n    return(\r\n        <View style={{\r\n            backgroundColor: \"#34057B\",\r\n            height:'90VH',\r\n            marginTop:'1vh'         \r\n        }}>\r\n            <Animated.View style={{width:'100%', height:heightAnimation, justifyContent: \"center\", alignItems: \"center\", paddingTop:'1vh'}}>\r\n                <View style={{justifyContent:'flex-start', alignItems:'flex-start', width:'18vw'}}>  \r\n                    <Text style={{color:'white', fontFamily:'Inter_300Light'}}>Hi I'm Olly, a...</Text>\r\n                </View>\r\n                <TextTyper title={title} time={100} style={{ color: 'white', fontFamily: 'Inter_900Black', fontSize:'3rem'}} onComplete={onComplete} enabled />\r\n                {state ? <TextTyper title={\"Thanks for checking out my site.\"} time={100} style={{color:'white', fontFamily:'Inter_300Light'}} onComplete={() => { animateHeader(); animateContent(); }}/> : <></>}\r\n            </Animated.View>\r\n        </View>\r\n    );\r\n};\r\n\r\n\r\nconst MobHome: React.FC<clientState> = (client) => {\r\n    const [state, setState] = useState(false);\r\n    const heightAnimation = useRef(new Animated.Value(475)).current;\r\n    const _opacity = useRef(new Animated.Value(0)).current;\r\n\r\n    const animateHeader = () => {\r\n        Animated.timing(heightAnimation, {\r\n            toValue: 130,\r\n            duration: 300,\r\n            useNativeDriver: false\r\n        }).start((finished) => {\r\n        });\r\n    };\r\n\r\n    const animateContent = () => {\r\n        Animated.timing(_opacity, { \r\n            toValue: 1,\r\n            duration: 200,\r\n            useNativeDriver: false\r\n        }).start();\r\n    }\r\n\r\n    const onComplete = (e: boolean) => {\r\n        setState(e);\r\n    };\r\n\r\n    return(        \r\n        <View style={{\r\n            backgroundColor: \"#34057B\",\r\n            height:'85vh',\r\n            overflow:'hidden' \r\n        }}>\r\n            <Animated.View style={{width:'100%', height:heightAnimation, justifyContent: \"center\", alignItems: \"center\", paddingTop:'1vh'}}>\r\n                <View style={{justifyContent: \"center\", alignItems: \"center\"}}>  \r\n                    <Text style={{color:'white', fontFamily:'Inter_300Light'}}>Hi I'm Olly, a...</Text>\r\n                </View>\r\n                <TextTyper title={title} time={100} style={{ color: 'white', fontFamily: 'Inter_900Black', fontSize:'1.95rem'}} onComplete={onComplete} enabled />\r\n                {state ? <TextTyper title={\"Thanks for checking out my site.\"} time={100} style={{color:'white', fontFamily:'Inter_300Light'}} onComplete={() => { animateHeader(); animateContent(); }}/> : <></>}\r\n            </Animated.View>\r\n            <Animated.View style={{ width:'99vw', height:client.height <= 750 ? '68vh' : '73vh',backgroundColor:'#34056A', \r\n                justifyContent: \"center\", alignItems: \"center\", opacity:_opacity,                \r\n                borderTopLeftRadius: 50 / 2, borderTopRightRadius: 50 / 2, marginLeft:'0.5vw', overflow:'hidden'}}>\r\n                <Text> Hi there. This is some sample text. </Text>\r\n            </Animated.View>\r\n        </View>\r\n    );\r\n};\r\n","import { StatusBar } from 'expo-status-bar';\r\nimport React, { useEffect, useRef } from 'react';\r\nimport { ImageBackground, StyleSheet, Text, View, Image, ProgressBarAndroidBase, Animated, Linking } from 'react-native';\r\nimport { Provider } from 'react-redux';\r\nimport { ClientTab } from './src/clientTab';\r\nimport { store, useAppDispatch } from './src/redux/store';\r\nimport { Link, NativeRouter, Route, Routes } from 'react-router-native';\r\nimport { useFonts, Inter_900Black, Inter_300Light } from '@expo-google-fonts/inter';\r\nimport { ProgressBar, Provider as PaperProvider } from 'react-native-paper';\r\nimport { AnimatedCircularProgress } from 'react-native-circular-progress';\r\n\r\nimport { Home } from './src/components/apps/Home';\r\n\r\nexport const mobileimage = require('./desktop.png');\r\n\r\n\r\nexport default function App() {\r\n  let [fontsLoaded] = useFonts({\r\n    Inter_900Black, Inter_300Light\r\n  });\r\n\r\n  let [fakeLoad, setFakeLoad] = React.useState(false);\r\n\r\n  return (\r\n    <NativeRouter>\r\n      <Provider store={store}>\r\n        <PaperProvider>\r\n          <View style={styles.app}>\r\n            {fakeLoad ?     \r\n              <View style={{}}>\r\n                  <ClientTab />\r\n              </View> :\r\n              <></>\r\n            }\r\n            <View>\r\n              {fakeLoad ? (  \r\n                <View>\r\n                  <Routes>\r\n                    <Route path=\"/\" element={<Home />} />\r\n                  </Routes>\r\n                  <View style={styles.loadedContainer}>\r\n                    <Text style={{fontFamily:'Inter_300Light', color:'lightgray', fontSize:'0.75rem',}}>\r\n                      {'\\u00A9'} 2022 yllo.cc | \r\n                      <a href=\"https://github.com/ollymonger/ollymonger.github.io/\" style={{color:'lightgray', textDecoration:'none'}}> Source</a> | \r\n                      Built using Expo and React-Native\r\n                    </Text>\r\n                  </View>\r\n                </View>\r\n                ) : (\r\n                <View style={styles.loadingContainer}>\r\n                  <AnimatedCircularProgress\r\n                    size={200}\r\n                    width={10}\r\n                    fill={100}\r\n                    rotation={0}\r\n                    duration={700}\r\n                    tintColor=\"#B084CC\"\r\n                    backgroundColor=\"purple\"\r\n                    onAnimationComplete={() => setFakeLoad(true)}\r\n                  >\r\n                    {\r\n                      (fill) => (                        \r\n                        <Text style={styles.loadingText}>{\r\n                          fill >= 95 ? 'LOADED'  : Math.round(fill) + '%'\r\n                        }</Text>\r\n                      )\r\n                    }\r\n                  </AnimatedCircularProgress>\r\n                </View>\r\n                )}\r\n            </View>\r\n\r\n          </View>\r\n        </PaperProvider>\r\n      </Provider>\r\n    </NativeRouter>\r\n  );\r\n}\r\n\r\nexport const styles = StyleSheet.create({\r\n  app: {\r\n    flex: 1,\r\n    backgroundColor: '#340580',\r\n    color: '#fff',\r\n    // disable highlighting\r\n    WebkitTouchCallout: 'none',\r\n    WebkitUserSelect: 'none',\r\n    KhtmlUserSelect: 'none',\r\n    MozUserSelect: 'none',\r\n    msUserSelect: 'none',\r\n    userSelect: 'none',\r\n    overflow:'hidden',\r\n    height:'100%',\r\n    width:'100%'\r\n  },\r\n  header: {\r\n    flex: 1,\r\n    maxHeight: '5%',\r\n    paddingLeft: '5%',\r\n    paddingTop: '2vh',\r\n    paddingRight: '5%',\r\n  },\r\n  headerTextColor: {\r\n    color: '#F7F7FF',\r\n    fontFamily: 'Inter_900Black'\r\n  },\r\n  navLeft: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'flex-start',\r\n    color: '#F7F7FF'\r\n  },\r\n  navRight: {\r\n    bottom: '20px',\r\n    flexDirection: 'row',\r\n    justifyContent: 'flex-end',\r\n    color: '#F7F7FF'\r\n  },\r\n  loadingContainer:{\r\n    flex: 2,\r\n    paddingLeft: '23vw',\r\n    paddingTop: '25vh',\r\n    paddingRight: '23vw',\r\n    alignSelf: 'center',\r\n  },\r\n  loadingText:{\r\n    fontFamily: 'Inter_900Black',\r\n    fontSize: '2rem',\r\n    color: '#B084CC'\r\n  },\r\n  loadedContainer: {\r\n    color:'lightgray',\r\n    backgroundColor:'#340580',\r\n    width:'100%',\r\n    justifyContent:'center', alignItems:'center',\r\n    height:'7.5%',\r\n    padding:'1.5vh'\r\n  }\r\n});\r\n","module.exports = __webpack_public_path__ + \"static/media/desktop.c8a87ae7.png\";"],"sourceRoot":""}