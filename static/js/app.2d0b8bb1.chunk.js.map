{"version":3,"sources":["src/redux/clientReducer.ts","src/redux/store.ts","src/data/header/menuItemsInLanguage.ts","src/components/headers/MobileHeader.tsx","src/components/headers/WebHeader.tsx","src/clientTab.tsx","App.tsx","desktop.png"],"names":["initialState","device","lang","width","window","innerWidth","height","innerHeight","githubRepos","clientSlice","createSlice","name","reducers","setClient","state","result","UAParser","getResult","type","setScreenSize","action","payload","addGithubRepos","getState","setLanguage","navigator","language","indexOf","substring","setSpecificLang","getLanguage","actions","store","configureStore","reducer","client","clientReducer","useAppSelector","useSelector","menuItemsInLanguages","menu","home","projects","contact","MobileHeader","React","useState","open","setOpen","closeMenu","useNavigate","menuItems","find","item","View","style","styles","header","navLeft","Text","headerTextColor","navRight","Menu","visible","onDismiss","anchor","Button","onPress","color","title","Item","replace","Divider","map","WebHeader","to","paddingRight","ClientTab","dispatch","useDispatch","_setScreenSize","handleWindowResize","useCallback","e","useEffect","addEventListener","fetch","then","res","json","data","repo","id","description","license","full_name","owner","login","avatar_url","openIssues","open_issues","stars","stargazers_count","url","html_url","console","log","removeEventListener","require","App","useFonts","Inter_900Black","Inter_300Light","fakeLoad","setFakeLoad","app","loadedContainer","loadingContainer","size","fill","rotation","duration","tintColor","backgroundColor","onAnimationComplete","loadingText","Math","round","StyleSheet","create","flex","maxHeight","paddingLeft","paddingTop","fontFamily","flexDirection","justifyContent","bottom","alignSelf","fontSize","module","exports"],"mappings":"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","file":"static/js/app.2d0b8bb1.chunk.js","sourcesContent":["import { RootState } from './store';\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { UAParser } from 'ua-parser-js';\r\nimport { Navigate, useNavigate } from 'react-router';\r\nimport { FC } from 'react';\r\nimport { GitReposData } from '../models/gitReposData';\r\n\r\nexport interface clientState {\r\n    device: string;\r\n    lang: string;\r\n    width: number;\r\n    height: number;\r\n    githubRepos: GitReposData[];\r\n}\r\n\r\nconst initialState: clientState = {\r\n    device: 'null',\r\n    lang: 'en',\r\n    width: window.innerWidth,\r\n    height: window.innerHeight,\r\n    githubRepos: []\r\n}\r\n\r\nexport const clientSlice = createSlice({\r\n    name: 'client',\r\n    initialState,\r\n    reducers: {\r\n        setClient: (state) => {\r\n            let parser = new UAParser();\r\n            let result = parser.getResult();\r\n            state.device = result.device.type ? result.device.type : 'web';\r\n        },\r\n        setScreenSize: (state, action: PayloadAction<{ width: number, height: number }>) => {\r\n            state.width = action.payload.width;\r\n            state.height = action.payload.height;\r\n        },\r\n        addGithubRepos: (state, action: PayloadAction<GitReposData>) => {\r\n            state.githubRepos = [...state.githubRepos, action.payload];\r\n        },\r\n        getState: (state) => {\r\n            return state;\r\n        },\r\n        setLanguage: (state) => {\r\n            if (window.navigator.language.indexOf('-') > 0) {\r\n                // set state to only be first two characters of window.navigator.language\r\n                state.lang = window.navigator.language.substring(0, 2);\r\n            }\r\n            else {\r\n                state.lang = window.navigator.language;\r\n            }\r\n        },\r\n        setSpecificLang: (state, action: PayloadAction<string>) => {\r\n            state.lang = action.payload;\r\n        },\r\n        getLanguage: (state) => {\r\n            state.lang;\r\n        }\r\n    }\r\n})\r\n\r\nexport const { setClient, setLanguage, setSpecificLang, getLanguage, setScreenSize, addGithubRepos } = clientSlice.actions;\r\nexport const getClient = (state: clientState) => state;\r\n\r\nexport default clientSlice.reducer;\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport clientReducer from './clientReducer';\r\n\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        client: clientReducer\r\n    }\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","export const menuItemsInLanguages = [{lang:\"en\", menu: \"MENU\", home: \"HOME\", projects: \"PROJECTS\", contact: \"CONTACT\"}, \r\n{lang:\"fr\", menu: \"MENU\", home: \"ACCUEIL\", projects: \"PROJETS\", contact: \"CONTACT\"}, \r\n{lang:\"de\", menu: \"SPEISEKARTE\", home: \"HEIMAT\", projects: \"PROJEKTE\", contact: \"KONTAKT\"},\r\n{lang:\"es\", menu: \"MENÚ\", home: \"HOGAR\", projects: \"PROYECTOS\", contact: \"CONTACTO\"}, \r\n{lang:\"it\", menu: \"MENÙ\", home: \"CASA\", projects: \"PROGETTI\", contact: \"CONTATTO\"}, \r\n{lang:\"ru\", menu: \"МЕНЮ\", home: \"ДОМ\", projects: \"ПРОЕКТЫ\", contact: \"КОНТАКТ\"},\r\n{lang:\"zh\", menu: \"菜单\", home: \"家\", projects: \"项目\", contact: \"联系\"}, \r\n{lang:\"ja\", menu: \"メニュー\", home: \"家\", projects: \"プロジェクト\", contact: \"連絡先\"}];","import React, { useEffect } from \"react\";\r\nimport { View, Text, Button, Linking } from \"react-native\";\r\nimport { Divider, Menu } from \"react-native-paper\";\r\nimport { useNavigate } from \"react-router\";\r\n\r\nimport { styles } from \"../../../App\";\r\nimport { menuItemsInLanguages } from \"../../data/header/menuItemsInLanguage\";\r\nimport { clientState, setClient, setLanguage } from \"../../redux/clientReducer\";\r\nimport { useAppDispatch, useAppSelector } from \"../../redux/store\";\r\n\r\nexport const MobileHeader = () => {\r\n    const [open, setOpen] = React.useState(false);\r\n    const client: clientState = useAppSelector(state => state.client);\r\n\r\n    const openMenu = () => setOpen(true);\r\n    const closeMenu = () => setOpen(false);\r\n\r\n    let navigator = useNavigate();\r\n\r\n    let menuItems = menuItemsInLanguages.find(item => item.lang === client.lang);\r\n\r\n    return (\r\n        <View style={styles.header}>\r\n            <View style={styles.navLeft}>\r\n                <Text style={styles.headerTextColor} >yllo.cc</Text>\r\n            </View>\r\n            <View style={styles.navRight}>\r\n                <Menu visible={open} onDismiss={closeMenu} anchor={<Button onPress={openMenu} color=\"#B084CC\" title={menuItems.menu} />}>\r\n                    <Menu.Item onPress={() => { navigator('/', { replace: true }); closeMenu(); }} title={menuItems.home}></Menu.Item>\r\n                    <Divider />\r\n                    <Menu.Item onPress={() => { navigator('/projects', { replace: true }); closeMenu(); }} title={menuItemsInLanguages.map(lang => {\r\n                        if(lang.lang === client.lang){ return lang.projects; }\r\n                    })} />\r\n                    <Divider />\r\n                    <Menu.Item onPress={() => { navigator('/contact', { replace: true }); closeMenu(); }} title={menuItems.contact} />\r\n                </Menu>\r\n            </View>\r\n        </View>\r\n    )\r\n}","import React, { useEffect } from \"react\";\r\nimport { View, Text, Button } from \"react-native\";\r\nimport { styles } from \"../../../App\";\r\nimport { Route, Link } from 'react-router-native';\r\nimport { useAppSelector } from \"../../redux/store\";\r\nimport { clientState } from \"../../redux/clientReducer\";\r\nimport { menuItemsInLanguages } from \"../../data/header/menuItemsInLanguage\";\r\n\r\nexport const WebHeader = () => {\r\n    const client: clientState = useAppSelector(state => state.client);\r\n    \r\n    // select menu item in current language\r\n    let menuItems = menuItemsInLanguages.find(item => item.lang === client.lang);\r\n\r\n    return (\r\n\r\n        <View style={styles.header} >\r\n            <View style={styles.navLeft}>\r\n                <Link to=\"/\"><Text style={styles.headerTextColor}>yllo.cc</Text></Link>\r\n            </View>\r\n            <View style={styles.navRight}>\r\n                    <View style={{ paddingRight: '5%' }}>\r\n                        <Link to=\"/\"><Text style={styles.headerTextColor}>{menuItems.home}</Text></Link>\r\n                    </View>        \r\n                    <View style={{ paddingRight:'5%' }}>\r\n                        <Link to=\"/projects\"><Text style={styles.headerTextColor}>{menuItems.projects}</Text></Link>\r\n                    </View>\r\n                    <View>\r\n                        <Link to=\"/contact\"><Text style={styles.headerTextColor}>{menuItems.contact}</Text></Link>\r\n                    </View>\r\n            </View>\r\n        </View >\r\n    )\r\n}","import React, { useCallback, useEffect } from \"react\";\r\nimport { View, Text, Button } from \"react-native\";\r\nimport { styles } from \"../App\";\r\nimport { addGithubRepos, setClient, setLanguage, setScreenSize } from \"./redux/clientReducer\";\r\nimport { useAppDispatch, useAppSelector } from \"./redux/store\";\r\nimport { MobileHeader } from \"./components/headers/MobileHeader\";\r\nimport { WebHeader } from \"./components/headers/WebHeader\";\r\nimport { GitReposData } from \"./models/gitReposData\";\r\n\r\n\r\nexport const ClientTab = () => {\r\n    let client = useAppSelector(state => state.client)\r\n    const dispatch = useAppDispatch();\r\n    const [screenSize, _setScreenSize] = React.useState({ width: 0, height: 0 });\r\n\r\n    const handleWindowResize = useCallback(e =>{\r\n        _setScreenSize({ width: window.innerWidth, height: window.innerHeight });\r\n        dispatch(setScreenSize({ width: window.innerWidth, height: window.innerHeight }));\r\n    },[]);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", handleWindowResize);\r\n        \r\n        dispatch(setClient());\r\n        dispatch(setLanguage());\r\n        // get git repos for user\r\n        fetch(\"https://api.github.com/users/ollymonger/repos\").then(res => res.json()).then(data => {\r\n            //foreach item in data\r\n            for(let item in data){\r\n                let repo: GitReposData = { \r\n                    id: data[item].id,\r\n                    name: data[item].name,\r\n                    description: data[item].description,\r\n                    license: data[item].license,\r\n                    full_name: data[item].full_name,\r\n                    owner: {\r\n                        login: data[item].owner.login,\r\n                        id: data[item].owner.id,\r\n                        avatar_url: data[item].owner.avatar_url\r\n                    },\r\n                    openIssues: data[item].open_issues,\r\n                    stars: data[item].stargazers_count,\r\n                    url: data[item].html_url\r\n                };\r\n                dispatch(addGithubRepos(repo));\r\n            }\r\n            console.log(client.githubRepos);\r\n        });\r\n        return () => {\r\n            window.removeEventListener(\"resize\", handleWindowResize);\r\n        }\r\n        \r\n    }, [handleWindowResize]);\r\n\r\n\r\n    if(client.device === \"mobile\"){\r\n        return <MobileHeader/>\r\n    } else if(client.height > 600 && client.width > 640){\r\n        return <WebHeader/>\r\n    } else {\r\n        return <MobileHeader/>\r\n    }\r\n}\r\n","import { StatusBar } from 'expo-status-bar';\r\nimport React, { useEffect, useRef } from 'react';\r\nimport { ImageBackground, StyleSheet, Text, View, Image, ProgressBarAndroidBase, Animated } from 'react-native';\r\nimport { Provider } from 'react-redux';\r\nimport { ClientTab } from './src/clientTab';\r\nimport { store, useAppDispatch } from './src/redux/store';\r\nimport { Link, NativeRouter, Route, Routes } from 'react-router-native';\r\nimport { useFonts, Inter_900Black, Inter_300Light } from '@expo-google-fonts/inter';\r\nimport { ProgressBar, Provider as PaperProvider } from 'react-native-paper';\r\nimport { AnimatedCircularProgress } from 'react-native-circular-progress';\r\n\r\nimport { Home } from './src/components/apps/Home';\r\n\r\nexport const mobileimage = require('./desktop.png');\r\n\r\n\r\nexport default function App() {\r\n  let [fontsLoaded] = useFonts({\r\n    Inter_900Black, Inter_300Light\r\n  });\r\n\r\n  let [fakeLoad, setFakeLoad] = React.useState(false);\r\n\r\n  return (\r\n    <NativeRouter>\r\n      <Provider store={store}>\r\n        <PaperProvider>\r\n          <View style={styles.app}>\r\n            {fakeLoad ?     \r\n              <View style={{}}>\r\n                  <ClientTab />\r\n              </View> :\r\n              <></>\r\n            }\r\n            <View>\r\n              {fakeLoad ? (  \r\n                <View style={styles.loadedContainer}>\r\n                  <Routes>\r\n                  </Routes>\r\n                </View>\r\n                ) : (\r\n                <View style={styles.loadingContainer}>\r\n                  <AnimatedCircularProgress\r\n                    size={200}\r\n                    width={10}\r\n                    fill={100}\r\n                    rotation={0}\r\n                    duration={700}\r\n                    tintColor=\"#B084CC\"\r\n                    backgroundColor=\"purple\"\r\n                    onAnimationComplete={() => setFakeLoad(true)}\r\n                  >\r\n                    {\r\n                      (fill) => (                        \r\n                        <Text style={styles.loadingText}>{\r\n                          fill >= 95 ? 'LOADED'  : Math.round(fill) + '%'\r\n                        }</Text>\r\n                      )\r\n                    }\r\n                  </AnimatedCircularProgress>\r\n                </View>\r\n                )}\r\n            </View>\r\n\r\n          </View>\r\n        </PaperProvider>\r\n      </Provider>\r\n    </NativeRouter>\r\n  );\r\n}\r\n\r\nexport const styles = StyleSheet.create({\r\n  app: {\r\n    flex: 1,\r\n    backgroundColor: '#340580',\r\n    color: '#fff',\r\n    height: '100%'\r\n  },\r\n  header: {\r\n    flex: 2,\r\n    maxHeight: '7%',\r\n    paddingLeft: '5%',\r\n    paddingTop: '2%',\r\n    paddingRight: '5%',\r\n  },\r\n  headerTextColor: {\r\n    color: '#F7F7FF',\r\n    fontFamily: 'Inter_900Black'\r\n  },\r\n  navLeft: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'flex-start',\r\n    color: '#F7F7FF'\r\n  },\r\n  navRight: {\r\n    bottom: '20px',\r\n    flexDirection: 'row',\r\n    justifyContent: 'flex-end',\r\n    color: '#F7F7FF'\r\n  },\r\n  loadingContainer:{\r\n    flex: 2,\r\n    paddingLeft: '23vw',\r\n    paddingTop: '25vh',\r\n    paddingRight: '23vw',\r\n    alignSelf: 'center',\r\n  },\r\n  loadingText:{\r\n    fontFamily: 'Inter_900Black',\r\n    fontSize: '2rem',\r\n    color: '#B084CC'\r\n  },\r\n  loadedContainer: {\r\n  }\r\n});\r\n","module.exports = __webpack_public_path__ + \"static/media/desktop.c8a87ae7.png\";"],"sourceRoot":""}