{"version":3,"sources":["src/clientReducer.ts","src/store.ts","src/clientTab.tsx","App.tsx"],"names":["clientSlice","createSlice","name","initialState","device","reducers","setClient","state","result","UAParser","getResult","type","actions","store","configureStore","reducer","client","clientReducer","useAppSelector","useSelector","ClientTab","dispatch","useDispatch","useEffect","View","style","styles","header","navLeft","to","Text","headerTextColor","navRight","right","App","useFonts","Inter_900Black","app","exact","path","element","container","StyleSheet","create","flex","backgroundColor","color","height","maxHeight","paddingLeft","paddingTop","paddingRight","fontFamily","flexDirection","justifyContent","bottom"],"mappings":"6OAYaA,EAAcC,YAAY,CACnCC,KAAM,SACNC,aAN8B,CAC9BC,OAAQ,QAMRC,SAAU,CACNC,UAAW,SAACC,GACR,IACIC,GADS,IAAIC,YACGC,YACpBH,EAAMH,OAASI,EAAOJ,OAAOO,KAAOH,EAAOJ,OAAOO,KAAO,UAKtDL,EAAcN,EAAYY,QAA1BN,UAGAN,IAAf,QCtBaa,EAAQC,YAAe,CAChCC,QAAS,CACLC,OAAQC,KAOHC,EAAkDC,I,QCNlDC,EAAY,WACRF,GAAe,SAAAX,GAAK,OAAIA,EAAMS,UAA3C,IACMK,EDG0BC,cCGhC,OAJAC,qBAAU,WACNF,EAASf,QAIT,kBAACkB,EAAA,EAAD,CAAMC,MAAOC,EAAOC,QAChB,kBAACH,EAAA,EAAD,CAAMC,MAAOC,EAAOE,SAChB,kBAAC,IAAD,CAAMC,GAAG,KAAI,kBAACC,EAAA,EAAD,CAAML,MAAOC,EAAOK,iBAApB,aAEjB,kBAACP,EAAA,EAAD,CAAMC,MAAOC,EAAOM,UAChB,kBAAC,IAAD,CAAMH,GAAG,aACL,kBAACL,EAAA,EAAD,CAAMC,MAAO,CAACQ,MAAM,QAChB,kBAACH,EAAA,EAAD,CAAML,MAAOC,EAAOK,iBAApB,cAGR,kBAAC,IAAD,CAAMF,GAAG,YACL,kBAACL,EAAA,EAAD,KACI,kBAACM,EAAA,EAAD,CAAML,MAAOC,EAAOK,iBAApB,gB,eCVT,SAASG,IACtB,MAAoBC,YAAS,CAC3BC,qBADF,YAIA,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUvB,MAAOA,GACf,kBAACW,EAAA,EAAD,CAAMC,MAAOC,EAAOW,KAClB,kBAACb,EAAA,EAAD,CAAMC,MAAOC,EAAOC,QAClB,kBAAC,EAAD,OAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOW,OAAK,EAACC,KAAK,IAAIC,QAnB9B,kBAAChB,EAAA,EAAD,CAAMC,MAAOC,EAAOe,WAClB,kBAACX,EAAA,EAAD,wBA0BC,IAAMJ,EAASgB,IAAWC,OAAO,CACtCN,IAAK,CACHO,KAAM,EACNC,gBAAgB,UAChBC,MAAM,OACNC,OAAO,QAETpB,OAAQ,CACNiB,KAAM,EACNI,UAAW,KACXC,YAAY,KACZC,WAAW,OACXC,aAAa,MAEfpB,gBAAgB,CACde,MAAM,UACNM,WAAW,kBAEbxB,QAAQ,CACNyB,cAAe,MACfC,eAAe,aACfR,MAAM,WAERd,SAAS,CACPuB,OAAO,OACPF,cAAe,MACfC,eAAe,WACfR,MAAM,WAERL,UAAW,CACTG,KAAM,EACNK,YAAY,MACZC,WAAW,MACXC,aAAa,U","file":"static/js/app.d2a0e214.chunk.js","sourcesContent":["import { RootState } from './store';\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { UAParser } from 'ua-parser-js';\r\n\r\ninterface clientState {\r\n    device: string;\r\n}\r\n\r\nconst initialState: clientState = {\r\n    device: 'null'\r\n}\r\n\r\nexport const clientSlice = createSlice({\r\n    name: 'client',\r\n    initialState,\r\n    reducers: {\r\n        setClient: (state) => {\r\n            let parser = new UAParser();\r\n            let result = parser.getResult();\r\n            state.device = result.device.type ? result.device.type : 'web';\r\n        }\r\n    }\r\n})\r\n\r\nexport const { setClient } = clientSlice.actions;\r\nexport const getClient = (state: clientState) => state.device;\r\n\r\nexport default clientSlice.reducer;\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport clientReducer from './clientReducer';\r\n\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        client: clientReducer\r\n    }\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import React, { useEffect } from \"react\";\r\nimport { View, Text, Button } from \"react-native\";\r\nimport { styles } from \"../App\";\r\nimport { setClient } from \"./clientReducer\";\r\nimport { useAppDispatch, useAppSelector } from \"./store\";\r\nimport { Route, Link } from 'react-router-native';\r\n\r\n\r\nexport const ClientTab = () => {\r\n    let client = useAppSelector(state => state.client)\r\n    const dispatch = useAppDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(setClient());\r\n    })\r\n\r\n    return (\r\n        <View style={styles.header}>\r\n            <View style={styles.navLeft}> \r\n                <Link to=\"/\"><Text style={styles.headerTextColor}>yllo.cc</Text></Link>\r\n            </View>\r\n            <View style={styles.navRight}>\r\n                <Link to=\"/projects\">\r\n                    <View style={{right:'50%'}}>\r\n                        <Text style={styles.headerTextColor}>PROJECTS</Text>\r\n                    </View>\r\n                </Link>\r\n                <Link to=\"/contact\">\r\n                    <View>\r\n                        <Text style={styles.headerTextColor}>CONTACT</Text>\r\n                    </View>\r\n                </Link>\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n","import { StatusBar } from 'expo-status-bar';\r\nimport React, { useEffect } from 'react';\r\nimport { ImageBackground, StyleSheet, Text, View, Image } from 'react-native';\r\nimport { Provider } from 'react-redux';\r\nimport { setClient } from './src/clientReducer';\r\nimport { ClientTab } from './src/clientTab';\r\nimport { store, useAppDispatch, useAppSelector } from './src/store';\r\nimport { Link, NativeRouter, Route, Routes } from 'react-router-native';\r\nimport { useFonts, Inter_900Black } from '@expo-google-fonts/inter';\r\nconst image = { uri: \"https://www.seekpng.com/png/full/167-1679901_running-bond-pattern-home-design-brick-texture-overlay.png\" };\r\n\r\nconst Home = () => {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text>hi there</Text>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default function App() {\r\n  let [fontsLoaded] = useFonts({\r\n    Inter_900Black\r\n  });\r\n\r\n  return (\r\n    <NativeRouter>\r\n      <Provider store={store}>\r\n        <View style={styles.app}>\r\n          <View style={styles.header}>\r\n            <ClientTab/>\r\n          </View>          \r\n          <Routes>            \r\n            <Route exact path=\"/\" element={Home()} />\r\n          </Routes>\r\n        </View>\r\n      </Provider>\r\n    </NativeRouter>\r\n  );\r\n}\r\n\r\nexport const styles = StyleSheet.create({\r\n  app: {\r\n    flex: 1,\r\n    backgroundColor:'#340580',\r\n    color:'#fff',\r\n    height:'100%'\r\n  },\r\n  header: {\r\n    flex: 2,\r\n    maxHeight: '7%',\r\n    paddingLeft:'5%',\r\n    paddingTop:'1.5%',\r\n    paddingRight:'5%',\r\n  },\r\n  headerTextColor:{\r\n    color:'#F7F7FF',\r\n    fontFamily:'Inter_900Black'\r\n  },\r\n  navLeft:{\r\n    flexDirection: 'row',\r\n    justifyContent:'flex-start',\r\n    color:'#F7F7FF'\r\n  },\r\n  navRight:{\r\n    bottom:'20px',\r\n    flexDirection: 'row',\r\n    justifyContent:'flex-end',\r\n    color:'#F7F7FF'\r\n  },\r\n  container: {    \r\n    flex: 2,\r\n    paddingLeft:'10%',\r\n    paddingTop:'10%',\r\n    paddingRight:'10%',\r\n  }\r\n});\r\n"],"sourceRoot":""}