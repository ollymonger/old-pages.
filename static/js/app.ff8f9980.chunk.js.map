{"version":3,"sources":["src/redux/clientReducer.ts","src/redux/store.ts","src/components/MobileHeader.tsx","src/components/WebHeader.tsx","src/clientTab.tsx","src/components/Home.tsx","App.tsx"],"names":["clientSlice","createSlice","name","initialState","device","lang","reducers","setClient","state","result","UAParser","getResult","type","setLanguage","window","navigator","language","indexOf","substring","setSpecificLang","action","payload","getLanguage","actions","store","configureStore","reducer","client","clientReducer","useAppDispatch","useDispatch","useAppSelector","useSelector","menuItemsInLanguages","menu","home","projects","contact","MobileHeader","React","useState","open","setOpen","closeMenu","navigate","useNavigate","View","style","styles","header","navLeft","Text","headerTextColor","navRight","Menu","visible","onDismiss","anchor","Button","onPress","color","title","map","toString","Item","replace","Divider","WebHeader","to","right","ClientTab","dispatch","useEffect","welcomeMsg","text","developerMessage","secondaryMsg","languageButtonText","Home","fadeAnim","useRef","Animated","Value","current","fadeIn","timing","toValue","duration","start","opacity","selected","container","fontFamily","fontSize","msg","width","paddingTop","languages","random","Math","floor","length","console","log","MobHome","WebHome","App","useFonts","Inter_900Black","Inter_300Light","fontsLoaded","fakeLoad","setFakeLoad","setTimeout","app","exact","path","element","size","progress","animateFromValue","backgroundColor","StyleSheet","create","flex","height","maxHeight","paddingLeft","paddingRight","flexDirection","justifyContent","bottom","alignSelf"],"mappings":"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","file":"static/js/app.ff8f9980.chunk.js","sourcesContent":["import { RootState } from './store';\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { UAParser } from 'ua-parser-js';\r\n\r\nexport interface clientState {\r\n    device: string;\r\n    lang: string;\r\n}\r\n\r\nconst initialState: clientState = {\r\n    device: 'null',\r\n    lang: 'en'\r\n}\r\n\r\nexport const clientSlice = createSlice({\r\n    name: 'client',\r\n    initialState,\r\n    reducers: {\r\n        setClient: (state) => {\r\n            let parser = new UAParser();\r\n            let result = parser.getResult();\r\n            state.device = result.device.type ? result.device.type : 'web';\r\n        },\r\n        setLanguage: (state) => {\r\n            if (window.navigator.language.indexOf('-') > 0) {\r\n                // set state to only be first two characters of window.navigator.language\r\n                state.lang = window.navigator.language.substring(0, 2);\r\n            }\r\n            else {\r\n                state.lang = window.navigator.language;\r\n            }\r\n        },\r\n        setSpecificLang: (state, action: PayloadAction<string>) => {\r\n            state.lang = action.payload;\r\n        },\r\n        getLanguage: (state) => {\r\n            state.lang;\r\n        }\r\n    }\r\n})\r\n\r\nexport const { setClient, setLanguage, setSpecificLang, getLanguage } = clientSlice.actions;\r\nexport const getClient = (state: clientState) => state;\r\n\r\nexport default clientSlice.reducer;\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport clientReducer from './clientReducer';\r\n\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        client: clientReducer\r\n    }\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import React, { useEffect } from \"react\";\r\nimport { View, Text, Button, Linking } from \"react-native\";\r\nimport { Divider, Menu } from \"react-native-paper\";\r\nimport { Route, Link, Navigate, useNavigate } from 'react-router-native';\r\n\r\nimport { styles } from \"../../App\";\r\nimport { clientState, setClient, setLanguage } from \"../redux/clientReducer\";\r\nimport { useAppDispatch, useAppSelector } from \"../redux/store\";\r\n\r\nconst menuItemsInLanguages = [{lang:\"en\", menu: \"MENU\", home: \"HOME\", projects: \"PROJECTS\", contact: \"CONTACT\"}, \r\n{lang:\"fr\", menu: \"MENU\", home: \"ACCUEIL\", projects: \"PROJETS\", contact: \"CONTACT\"}, \r\n{lang:\"de\", menu: \"SPEISEKARTE\", home: \"HEIMAT\", projects: \"PROJEKTE\", contact: \"KONTAKT\"},\r\n{lang:\"es\", menu: \"MENÚ\", home: \"HOGAR\", projects: \"PROYECTOS\", contact: \"CONTACTO\"}, \r\n{lang:\"it\", menu: \"MENÙ\", home: \"CASA\", projects: \"PROGETTI\", contact: \"CONTATTO\"}, \r\n{lang:\"ru\", menu: \"МЕНЮ\", home: \"ДОМ\", projects: \"ПРОЕКТЫ\", contact: \"КОНТАКТ\"},\r\n{lang:\"zh\", menu: \"菜单\", home: \"家\", projects: \"项目\", contact: \"联系\"}, \r\n{lang:\"ja\", menu: \"メニュー\", home: \"家\", projects: \"プロジェクト\", contact: \"連絡先\"}];\r\n\r\n\r\nexport const MobileHeader = () => {\r\n    const [open, setOpen] = React.useState(false);\r\n    const client: clientState = useAppSelector(state => state.client);\r\n\r\n    const openMenu = () => setOpen(true);\r\n    const closeMenu = () => setOpen(false);\r\n    const navigate = useNavigate();\r\n\r\n    return (\r\n        <View style={styles.header}>\r\n            <View style={styles.navLeft}>\r\n                <Text style={styles.headerTextColor} >yllo.cc</Text>\r\n            </View>\r\n            <View style={styles.navRight}>\r\n                <Menu visible={open} onDismiss={closeMenu} anchor={<Button onPress={openMenu} color=\"#B084CC\" title={menuItemsInLanguages.map(lang => {\r\n                        if(lang.lang === client.lang){ return lang.menu.toString(); }\r\n                    })} />}>\r\n                    <Menu.Item onPress={() => { navigate('/', { replace: true }); closeMenu(); }} title={menuItemsInLanguages.map(lang => {\r\n                        if(lang.lang === client.lang){ return lang.home; }\r\n                    })}></Menu.Item>\r\n                    <Divider />\r\n                    <Menu.Item onPress={() => { navigate('/projects', { replace: true }); closeMenu(); }} title={menuItemsInLanguages.map(lang => {\r\n                        if(lang.lang === client.lang){ return lang.projects; }\r\n                    })} />\r\n                    <Divider />\r\n                    <Menu.Item onPress={() => { navigate('/contact', { replace: true }); closeMenu(); }} title={menuItemsInLanguages.map(lang => {\r\n                        if(lang.lang === client.lang){ return lang.contact; }\r\n                    })} />\r\n                </Menu>\r\n            </View>\r\n        </View>\r\n    )\r\n}","import React, { useEffect } from \"react\";\r\nimport { View, Text, Button } from \"react-native\";\r\nimport { styles } from \"../../App\";\r\nimport { Route, Link } from 'react-router-native';\r\nimport { useAppSelector } from \"../redux/store\";\r\nimport { clientState } from \"../redux/clientReducer\";\r\n\r\nconst menuItemsInLanguages = [{lang:\"en\", menu: \"MENU\", home: \"HOME\", projects: \"PROJECTS\", contact: \"CONTACT\"}, \r\n{lang:\"fr\", menu: \"MENU\", home: \"ACCUEIL\", projects: \"PROJETS\", contact: \"CONTACT\"}, \r\n{lang:\"de\", menu: \"SPEISEKARTE\", home: \"HEIMAT\", projects: \"PROJEKTE\", contact: \"KONTAKT\"},\r\n{lang:\"es\", menu: \"MENÚ\", home: \"HOGAR\", projects: \"PROYECTOS\", contact: \"CONTACTO\"}, \r\n{lang:\"it\", menu: \"MENÙ\", home: \"CASA\", projects: \"PROGETTI\", contact: \"CONTATTO\"}, \r\n{lang:\"ru\", menu: \"МЕНЮ\", home: \"ДОМ\", projects: \"ПРОЕКТЫ\", contact: \"КОНТАКТ\"},\r\n{lang:\"zh\", menu: \"菜单\", home: \"家\", projects: \"项目\", contact: \"联系\"}, \r\n{lang:\"ja\", menu: \"メニュー\", home: \"家\", projects: \"プロジェクト\", contact: \"連絡先\"}];\r\n\r\n\r\nexport const WebHeader = () => {\r\n    const client: clientState = useAppSelector(state => state.client);\r\n\r\n    return (\r\n\r\n        <View style={styles.header} >\r\n            <View style={styles.navLeft}>\r\n                <Link to=\"/\"><Text style={styles.headerTextColor}>yllo.cc</Text></Link>\r\n            </View>\r\n            <View style={styles.navRight}>\r\n                <Link to=\"/\">\r\n                    <View style={{ right:'175%' }}>\r\n                        <Text style={styles.headerTextColor}>{menuItemsInLanguages.map(lang => {\r\n                        if(lang.lang === client.lang){ return lang.home.toString(); }\r\n                    })}</Text>\r\n                    </View>\r\n                </Link>\r\n                <Link to=\"/projects\">\r\n                    <View style={{ right: '50%' }}>\r\n                        <Text style={styles.headerTextColor}>{menuItemsInLanguages.map(lang => {\r\n                        if(lang.lang === client.lang){ return lang.projects.toString(); }\r\n                    })}</Text>\r\n                    </View>\r\n                </Link>\r\n                <Link to=\"/contact\">\r\n                    <View>\r\n                        <Text style={styles.headerTextColor}>{menuItemsInLanguages.map(lang => {\r\n                        if(lang.lang === client.lang){ return lang.contact.toString(); }\r\n                    })}</Text>\r\n                    </View>\r\n                </Link>\r\n            </View>\r\n        </View >\r\n    )\r\n}","import React, { useEffect } from \"react\";\r\nimport { View, Text, Button } from \"react-native\";\r\nimport { styles } from \"../App\";\r\nimport { setClient, setLanguage } from \"./redux/clientReducer\";\r\nimport { useAppDispatch, useAppSelector } from \"./redux/store\";\r\nimport { Route, Link } from 'react-router-native';\r\nimport { MobileHeader } from \"./components/MobileHeader\";\r\nimport { WebHeader } from \"./components/WebHeader\";\r\n\r\n\r\nexport const ClientTab = () => {\r\n    let client = useAppSelector(state => state.client)\r\n    const dispatch = useAppDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(setClient());\r\n        dispatch(setLanguage());\r\n    },[]);\r\n\r\n    if(client.device === \"mobile\"){\r\n        return <MobileHeader/>\r\n    } else {\r\n        return <WebHeader/>\r\n    }\r\n}\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { View, Text, Animated, SafeAreaView, Button } from \"react-native\";\r\nimport App, { styles } from \"../../App\";\r\nimport { clientState, setLanguage, setSpecificLang } from \"../redux/clientReducer\";\r\nimport { useAppDispatch, useAppSelector } from \"../redux/store\";\r\n\r\nconst welcomeMsg = [{ lang: \"en\", text: \"Hi, I'm Olly!\" }, { lang: \"es\", text: \"Hola, soy Olly!\" }, { lang: \"fr\", text: \"Bonjour, je suis Olly!\" }, { lang: \"de\", text: \"Hallo, ich bin Olly!\" },\r\n{ lang: \"it\", text: \"Ciao, sono Olly!\" }, { lang: \"ru\", text: \"Привет, я Olly!\" }, { lang: \"zh\", text: \"你好，我是Olly!\" }, { lang: \"ja\", text: \"こんにちは、私はOllyです!\" }];\r\n\r\nconst developerMessage = [{ lang: \"en\", text: \"A passionate developer creating lots of apps using React, React Native, Typescript, JavaScript, Java, C#!\" },\r\n{ lang: \"es\", text: \"Un desarrollador apasionado creando muchas aplicaciones usando React, React Native, Typescript, JavaScript, Java, C#!\" },\r\n{ lang: \"fr\", text: \"Un développeur passionné créant de nombreuses applications en utilisant React, React Native, Typescript, JavaScript, Java, C#!\" },\r\n{ lang: \"de\", text: \"Ein passionierter Entwickler, der viele Apps mit React, React Native, Typescript, JavaScript, Java, C# erstellt!\" },\r\n{ lang: \"it\", text: \"Un sviluppatore passionato creando molte applicazioni usando React, React Native, Typescript, JavaScript, Java, C#!\" },\r\n{ lang: \"ru\", text: \"Персонализированный разработчик, создающий много приложений с использованием React, React Native, Typescript, JavaScript, Java, C#!\" },\r\n{ lang: \"zh\", text: \"一个热情的开发者创建了许多应用程序使用 React, React Native, Typescript, JavaScript, Java, C#!\" },\r\n{ lang: \"ja\", text: \"パッションである開発者が、React、React Native、Typescript、JavaScript、Java、C#を使用しているアプリケーションを複数作成しています。\" }];\r\n\r\nconst secondaryMsg = [{ lang: \"en\", text: \"This website is also available on all mobile devices and will fit to devices with any screen size! Oh, and it'll also use your browsers native language setting to determine what language to use!\" },\r\n{ lang: \"es\", text: \"Esta página web está disponible también en todos los dispositivos móviles y se ajustará a cualquier tamaño de pantalla! Oh, y también usará el lenguaje nativo de su navegador para determinar el idioma a usar!\" },\r\n{ lang: \"fr\", text: \"Ce site est également disponible sur tous les appareils mobiles et s'adaptera à tous les écrans! Oh, et il utilisera également la langue maternelle de votre navigateur pour déterminer la langue à utiliser!\" },\r\n{ lang: \"de\", text: \"Diese Website ist auch auf allen mobilen Geräten verfügbar und passt zu jedem Bildschirm! Oh, und es wird auch die Muttersprache Ihres Browsers verwendet, um die zu verwendende Sprache zu bestimmen!\" },\r\n{ lang: \"it\", text: \"Questo sito web è anche disponibile su tutti i dispositivi mobili e si adatta a qualsiasi schermo! Oh, e utilizzerà anche la lingua nativa del tuo browser per determinare la lingua da usare!\" },\r\n{ lang: \"ru\", text: \"Этот сайт также доступен на всех мобильных устройствах и подойдет как к мобильным устройствам, так и к любым экранам! Да, и он также будет использовать родной язык вашего браузера, чтобы определить язык для использования!\" },\r\n{ lang: \"zh\", text: \"这个网站也可以在所有移动设备上使用，并且适合任何屏幕尺寸！哦，它也会使用您的浏览器的原生语言设置来确定要使用哪种语言！\" },\r\n{ lang: \"ja\", text: \"このウェブサイトはすべてのモバイルデバイスで利用できます。そして、どんな画面サイズでも適用できます！そして、それは、あなたのブラウザのネイティブ言語設定を使用して、どの言語を使用するかを決定します！\" }];\r\n\r\nconst languageButtonText = [{ lang: \"en\", text: \"Randomise Language\" }, { lang: \"es\", text: \"Idioma aleatorio\" }, { lang: \"fr\", text: \"Langue aléatoire\" }, { lang: \"de\", text: \"Zufällige Sprache\" }, { lang: \"it\", text: \"Lingua casuale\" }, { lang: \"ru\", text: \"Случайный язык\" }, { lang: \"zh\", text: \"随机语言\" }, { lang: \"ja\", text: \"ランダムな言語\" }];\r\n\r\nconst WebHome = (client: clientState) => {\r\n  const dispatch = useAppDispatch();\r\n  const setLang = () => {\r\n    // pick random from array\r\n    const languages = [\"en\", \"es\", \"fr\", \"de\", \"it\", \"ru\", \"zh\", \"ja\"];\r\n    const random = Math.floor(Math.random() * languages.length);\r\n    console.log(\"attempting to set to: \" + languages[random]);\r\n    dispatch(setSpecificLang(languages[random]));\r\n  }\r\n  let selected = languageButtonText.map(lang => { if (lang.lang === client.lang) { return lang.text } });\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={{ fontFamily: 'Inter_900Black', color: '#F7F7FF', fontSize: '400%', width: '95%' }}>{\r\n        welcomeMsg.map(msg => { if (msg.lang === client.lang) { return msg.text } })}</Text>\r\n      <Text style={{ fontFamily: 'Inter_300Light', color: '#F7F7FF', fontSize: '100%', width: '45%' }}>\r\n        {developerMessage.map(msg => { if (msg.lang === client.lang) { return msg.text } })}\r\n      </Text>\r\n      <Text style={{ fontFamily: 'Inter_300Light', color: '#F7F7FF', fontSize: '75%', width: '45%' }}>\r\n        {secondaryMsg.map(msg => { if (msg.lang === client.lang) { return msg.text } })}\r\n      </Text>\r\n      <View style={{width: '50%', paddingTop:'5%'}}><Button onPress={setLang} title={selected.toString()} color=\"#B084CC\" /></View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst MobHome = (client: clientState) => {\r\n  const dispatch = useAppDispatch();\r\n  const setLang = () => {\r\n    // pick random from array\r\n    const languages = [\"en\", \"es\", \"fr\", \"de\", \"it\", \"ru\", \"zh\", \"ja\"];\r\n    const random = Math.floor(Math.random() * languages.length);\r\n    console.log(\"attempting to set to: \" + languages[random]);\r\n    dispatch(setSpecificLang(languages[random]));\r\n  }\r\n\r\n  let selected = languageButtonText.map(lang => { if (lang.lang === client.lang) { return lang.text } });\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={{ fontFamily: 'Inter_900Black', color: '#F7F7FF', fontSize: '275%' }}>{\r\n        welcomeMsg.map(msg => { if (msg.lang === client.lang) { return msg.text } })}</Text>\r\n      <Text style={{ fontFamily: 'Inter_300Light', color: '#F7F7FF', fontSize: '75%', width: '70%' }}>\r\n        {developerMessage.map(msg => { if (msg.lang === client.lang) { return msg.text } })}\r\n      </Text>\r\n      <Text style={{ fontFamily: 'Inter_300Light', color: '#F7F7FF', fontSize: '75%', width: '70%' }}>\r\n        {secondaryMsg.map(msg => { if (msg.lang === client.lang) { return msg.text } })}\r\n      </Text>\r\n      <View style={{width: '70%', paddingTop:'5%'}}><Button onPress={setLang} title={selected.toString()} color=\"#B084CC\" /></View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport const Home = () => {\r\n  const fadeAnim = useRef(new Animated.Value(0)).current;\r\n\r\n  useEffect(() => {\r\n    fadeIn();\r\n  })\r\n\r\n  const fadeIn = () => {\r\n    Animated.timing(fadeAnim, {\r\n      toValue: 1,\r\n      duration: 150\r\n    }).start();\r\n  };\r\n\r\n  const dispatch = useAppDispatch();\r\n  const client: clientState = useAppSelector(state => state.client);\r\n  if (client.device == \"mobile\") return (\r\n    <Animated.View style={[{ opacity: fadeAnim }]}>\r\n      {MobHome(client)}\r\n    </Animated.View>\r\n  );\r\n  else return (\r\n    <Animated.View style={[{ opacity: fadeAnim }]}>\r\n      {WebHome(client)}\r\n    </Animated.View>\r\n  );\r\n}\r\n","import { StatusBar } from 'expo-status-bar';\r\nimport React, { useEffect, useRef } from 'react';\r\nimport { ImageBackground, StyleSheet, Text, View, Image, ProgressBarAndroidBase, Animated } from 'react-native';\r\nimport { Provider } from 'react-redux';\r\nimport { ClientTab } from './src/clientTab';\r\nimport { store } from './src/redux/store';\r\nimport { Link, NativeRouter, Route, Routes } from 'react-router-native';\r\nimport { useFonts, Inter_900Black, Inter_300Light } from '@expo-google-fonts/inter';\r\nimport { ProgressBar, Provider as PaperProvider } from 'react-native-paper';\r\nimport AnimatedProgressWheel from 'react-native-progress-wheel';\r\n\r\nimport { Home } from './src/components/Home';\r\n\r\n\r\nexport default function App() {\r\n\r\n  let [fontsLoaded] = useFonts({\r\n    Inter_900Black, Inter_300Light\r\n  });\r\n\r\n  let [fakeLoad, setFakeLoad] = React.useState(false);\r\n\r\n  useEffect(() => {\r\n    if (fontsLoaded) {\r\n      setTimeout(() => {\r\n        setFakeLoad(true);\r\n      }, 1000);\r\n    }\r\n  }, [fontsLoaded]);\r\n\r\n  return (\r\n    <NativeRouter>\r\n      <Provider store={store}>\r\n        <PaperProvider>\r\n          <View style={styles.app}>\r\n            {fakeLoad ? (\r\n              <>\r\n                <View style={styles.header}>\r\n                  <ClientTab />\r\n                </View>\r\n                <Routes>\r\n                  <Route exact path=\"/\" element={<Home />} />\r\n                </Routes>\r\n              </>\r\n            ) : (\r\n              <View style={styles.container}>\r\n                <AnimatedProgressWheel\r\n                  size={300}\r\n                  width={20}\r\n                  progress={100}\r\n                  animateFromValue={0}\r\n                  duration={1000}\r\n                  backgroundColor={'purple'}\r\n                  color={'blue'}\r\n                />\r\n                <Text style={styles.headerTextColor}>Loading site...</Text>\r\n              </View>\r\n            )}\r\n          </View>\r\n        </PaperProvider>\r\n      </Provider>\r\n    </NativeRouter>\r\n  );\r\n}\r\n\r\nexport const styles = StyleSheet.create({\r\n  app: {\r\n    flex: 1,\r\n    backgroundColor: '#340580',\r\n    color: '#fff',\r\n    height: '100%'\r\n  },\r\n  header: {\r\n    flex: 2,\r\n    maxHeight: '7%',\r\n    paddingLeft: '5%',\r\n    paddingTop: '2%',\r\n    paddingRight: '5%',\r\n  },\r\n  headerTextColor: {\r\n    color: '#F7F7FF',\r\n    fontFamily: 'Inter_900Black'\r\n  },\r\n  navLeft: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'flex-start',\r\n    color: '#F7F7FF'\r\n  },\r\n  navRight: {\r\n    bottom: '20px',\r\n    flexDirection: 'row',\r\n    justifyContent: 'flex-end',\r\n    color: '#F7F7FF'\r\n  },\r\n  container: {\r\n    flex: 2,\r\n    paddingLeft: '10%',\r\n    paddingTop: '10%',\r\n    paddingRight: '10%',\r\n    alignSelf: 'center'\r\n  }\r\n});\r\n"],"sourceRoot":""}